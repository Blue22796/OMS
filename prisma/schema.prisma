// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}


model User {
  userId    Int       @id @default(autoincrement())
  name      String
  email     String    @unique
  password  String
  address   String?
  orders    Order[]
  carts     Cart[]
}

model Product {
  productId   Int       @id @default(autoincrement())
  name        String
  description String?
  price       Float     @default(0)
  stock       Int
  cartItems   CartItem[]
}

model Order {
  orderId   Int       @id @default(autoincrement())
  orderDate DateTime  @default(now())
  status    String
  user      User      @relation(fields: [userId], references: [userId])
  userId    Int
  cart      Cart      @relation(fields : [cartId], references : [cartId])
  cartId    Int       
  total     Float     @default(0)
}

model Cart {
  cartId     Int       @id @default(autoincrement())
  user       User      @relation(fields: [userId], references: [userId])
  userId     Int
  order      Order[]
  cartItems  CartItem[]
  total      Float      @default(0)
}

model CartItem {
  cartItemId Int      @id @default(autoincrement())
  cart       Cart     @relation(fields: [cartId], references: [cartId])
  cartId     Int
  product    Product  @relation(fields: [productId], references: [productId])
  productId  Int
  quantity   Int

  @@unique([cartId, productId])
}

model Coupon {
  couponId     Int     @id @default(autoincrement())
  coupon       String  @unique
  off          Float   
}
model CouponApplied{
  orderId   Int
  coupon    String
  @@unique([orderId, coupon])
}